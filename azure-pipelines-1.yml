trigger:
  batch: true
  branches:
    include:
      - master

pr:
  - master

resources:
  repositories:
    - repository: repo1
      type: github
      name: amolanol5/react-app
      endpoint: amolanol5
      # ref: refs/tags/v1.0

    - repository: repo2
      type: github
      name: amolanol5/lab
      endpoint: amolanol5
      # ref: refs/tags/v1.0
    
stages:
  - stage: STAGE_B
    displayName: STAGE_B
    variables:
    - group: DEV
    jobs:
      - job: job
        displayName: job_b
        steps:
          - checkout: self
          #- checkout: repo2
          - bash: |
              # export DECODE_STRING=$(echo "$SSH_KEY" | base64 --decode)
              # mkdir -p ~/.ssh
              # chmod 700 ~/.ssh
              # echo "$DECODE_STRING" > ~/.ssh/id_rsa
              # chmod 600 ~/.ssh/id_rsa

              # eval "$(ssh-agent -s)"
              # ssh-add ~/.ssh/id_rsa
              # ssh -o StrictHostKeyChecking=no -T git@github.com
              
              # Get the latest commit hash
              # # Get the previous commit hash
              # previous_commit=$(git diff HEAD..origin/master)
              # echo $previous_commit

              # # List the files that have changed between the two commits
              # changed_files=$(git diff --name-only $previous_commit $latest_commit)
              # echo $changed_files

              echo "var"
              # latest_commit=$(git rev-parse HEAD)
              # previous_commit=$(git diff HEAD..origin/master)
              TEST1="$(System.PullRequest.targetBranchName)"
              pr_branch="$(System.PullRequest.SourceBranch)"
              commit_pr="$(System.PullRequest.SourceCommitId)"
              TEST4=$(System.PullRequest.TargetBranch)

              echo $TEST1
              echo $TEST2
              echo $TEST3

              echo "commit PR"
              echo $commit_pr

              echo "git fetch pr_branch"
              git fetch origin $pr_branch

              latest_commit=$(git rev-parse HEAD)
              echo "latest_commit -----------------"
              echo "$latest_commit"
              echo "commit_pr -----------------"
              echo "$commit_pr"


              # echo "changed files -----------------"
              # git diff --name-only $commit_pr | cat
              # changed_files=$(git diff --name-only $commit_pr $latest_commit)
              # echo $changed_files
              echo "changed files -----------------"
              git diff --name-only --no-commit-id origin/$pr_branch
              # echo "uno"
              # test2=$(git log)
              # echo "$test2"

              # echo "dos"
              # test=$(git branch --list)
              # echo "$test"

              # echo "tres"
              # ls -la
